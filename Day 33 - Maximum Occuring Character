//{ Driver Code Starts
import java.lang.*;
import java.io.*;
import java.util.*;
class GFG
{
	public static void main (String[] args) throws IOException
	{
	 BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
	 int tc=Integer.parseInt(br.readLine().trim());
	 
	 while(tc-- >0)
	 {
	     String line=br.readLine().trim();
	     
	     Solution obj = new Solution();
	     
	     System.out.println(obj.getMaxOccuringChar(line));
	     
	 }
	 }
}
// } Driver Code Ends



class Solution
{
    //Function to find the maximum occurring character in a string.
    public static char getMaxOccuringChar(String line)
    {
      if (line == null || line.isEmpty()) {
            return '\0';
        }

        int[] charCount = new int[26]; // Assuming only lowercase alphabets

        char maxChar = line.charAt(0);
        int maxCount = 1;

        for (int i = 0; i < line.length(); i++) {
            char currentChar = line.charAt(i);
            int charIndex = currentChar - 'a';
            charCount[charIndex]++;

            if (charCount[charIndex] > maxCount ||
                (charCount[charIndex] == maxCount && currentChar < maxChar)) {
                maxChar = currentChar;
                maxCount = charCount[charIndex];
            }
        }

        return maxChar;
    }
}
